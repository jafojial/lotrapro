import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.SpinnerNumberModel;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;


/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * trafic.java
 *
 * Created on 10 août 2011, 00:36:57
 */

/**
 *
 * @author KRISTOVAL
 */
public class ResultUI extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/** Creates new form trafic */
	  public ResultUI(int project) {
		  	this.project = project;
		  	
		  /*
	    	lattitudeC = lattC;
	    	longitudeC = longiC;
	    	lattitudeP = lattP;
	    	longitudeP = longiP;
	    	adresseC = adresse;
	    	
	    	double longP = Double.parseDouble(longiP);
	    	double longC = Double.parseDouble(longiC);
	    	double latP = Double.parseDouble(lattP);
	    	double latC = Double.parseDouble(lattC);
	    	
	    	double PIx = 3.141592653589793; 
		     double RADIO = 6378.16; 
			double dlon = Math.toRadians(longP) - Math.toRadians(longC); 
	        double dlat = Math.toRadians(latP) - Math.toRadians(latC); 
	        double a = (Math.sin(dlat / 2) * Math.sin(dlat / 2)) + Math.cos(Math.toRadians(latC)) * Math.cos(Math.toRadians(latP)) * (Math.sin(dlon / 2) * Math.sin(dlon / 2)); 
	        double angle = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)); 
	         dist =  angle * RADIO; 
	         */
	        initComponents();
	        
	        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
	        this.setLocation((screen.width - this.getSize().width)/2,(screen.height - this.getSize().height)/2); 
	    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

    	try {
			  // Set LnF to platform default.
			  UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
			}
			// Silently consume exception.
			catch (Exception e) {
			}
			
			JTable table = new JTable(PointGAUSS.listProject(project));
			table.revalidate();
			int ligne  = table.getRowCount();
			for(int i=0; i<ligne; i++){
				PointGAUSS pg = new PointGAUSS(Integer.parseInt(table.getValueAt(i, 0).toString()), project, table.getValueAt(i, 2).toString(), Double.parseDouble(table.getValueAt(i, 3).toString()), Double.parseDouble(table.getValueAt(i, 4).toString()) );
				PointUTM pu = pg.Convert2();
				
				try {
					pu.create();
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			
			 result.setModel(PointUTM.list());
    
			
        jScrollPane1 = new javax.swing.JScrollPane();
        jSplitPane1 = new javax.swing.JSplitPane();
        try {
			jPanel1 = new PanelImage("images/projectForm.png");
			jPanel2 = new PanelImage("images/projectForm.png");
			jPanel3 = new PanelImage("images/space.png");
			jPanelOperationsTrafic = new PanelImage("images/space.png");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        jScrollPaneTrafic = new javax.swing.JScrollPane();
        
        jButtonView = new javax.swing.JButton();
        jButtonExport = new javax.swing.JButton("Export");
        jButtonExport.setForeground(new java.awt.Color(0, 0, 204));
        
        jScrollPaneLocalisation = new javax.swing.JScrollPane();
        
        jLabel2 = new javax.swing.JLabel();
        SpinnerNumberModel model = new SpinnerNumberModel(5, 0, 21, 1);
        jSpinnerZoom = new javax.swing.JSpinner(model);
        jLabel1 = new javax.swing.JLabel();
        jComboBoxTypeVue = new javax.swing.JComboBox();
        jButtonActualiserLocalisation = new javax.swing.JButton();
        
        googleMap = new JGoogleMapEditorPan();
        
        try {
            googleMap.setApiKey("ABQIAAAAtnr4_GzvhB-Oe-xXkGYFNBR2RpSMnlPM-oEGXWGIpwU-iPv4ghSJlR7Ikip7Q7w8sTD3ceYOHyH8cw");
            //  googleMap.setRoadmap(googleMap.viewHybrid);

            /**
            Afficher la ville de Strabourg
             */
            //googleMap.showLocation("strasbourg", "france", 390, 400);
            /**
             * Afficher Paris en fonction ses coordonnées GPS
             */
            googleMap.showCoordinate(lattitudeC, longitudeC, lattitudeP, longitudeP,640, 640);
        } catch (Exception ex) {
			
        }
        

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Results of the convertion");
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));

        jSplitPane1.setDividerLocation(600);

        jPanelOperationsTrafic.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opérations", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 204))); // NOI18N

        
        jButtonView.setForeground(new java.awt.Color(0, 0, 204));
        jButtonView.setText("View");
        jButtonView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonViewActionPerformed(evt);
            }
        });
       
        jButtonExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelOperationsTraficLayout = new javax.swing.GroupLayout(jPanelOperationsTrafic);
        jPanelOperationsTraficLayout.setHorizontalGroup(
                jPanelOperationsTraficLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelOperationsTraficLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGap(18, 18, 18)
                    .addComponent(jButtonExport, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 278, Short.MAX_VALUE)
                    .addComponent(jButtonView)
                    .addContainerGap())
            );
            jPanelOperationsTraficLayout.setVerticalGroup(
                jPanelOperationsTraficLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelOperationsTraficLayout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addGroup(jPanelOperationsTraficLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonExport)
                        .addComponent(jButtonView))
                    .addContainerGap(20, Short.MAX_VALUE))
            );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneTrafic, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 579, Short.MAX_VALUE)
                    .addComponent(jPanelOperationsTrafic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneTrafic, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanelOperationsTrafic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        
        
        jScrollPaneTrafic.setViewportView(result);
        
        jSplitPane1.setLeftComponent(jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opérations", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 204))); // NOI18N

        jLabel2.setForeground(new java.awt.Color(0, 51, 255));
        jLabel2.setText("Zoom : ");

        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Type de vue : ");

        jComboBoxTypeVue.setForeground(new java.awt.Color(0, 0, 204));
        jComboBoxTypeVue.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ground", "Road", "Satellite", "Hybrid" }));

        jButtonActualiserLocalisation.setForeground(new java.awt.Color(0, 0, 204)); // NOI18N
        jButtonActualiserLocalisation.setText("Refresh");
        jButtonActualiserLocalisation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualiserLocalisationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jSpinnerZoom, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jComboBoxTypeVue, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(jButtonActualiserLocalisation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerZoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxTypeVue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonActualiserLocalisation))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        
        jScrollPaneLocalisation.setViewportView(googleMap);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPaneLocalisation, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)
                        .addContainerGap(11, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(11, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneLocalisation, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane1.setRightComponent(jPanel2);

        jScrollPane1.setViewportView(jSplitPane1);

      

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1112, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
        );
        
        this.setResizable(false);
        this.setSize(1100, 1250);
        pack();
    }// </editor-fold>

    private void jButtonActualiserLocalisationActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    	zoom = Integer.parseInt(jSpinnerZoom.getValue().toString());
    	
    	vue = jComboBoxTypeVue.getSelectedItem().toString();
    	 try {
             googleMap.setApiKey("ABQIAAAAtnr4_GzvhB-Oe-xXkGYFNBR2RpSMnlPM-oEGXWGIpwU-iPv4ghSJlR7Ikip7Q7w8sTD3ceYOHyH8cw");
             
              if(vue=="Hybrid") googleMap.setRoadmap(googleMap.viewHybrid);
              else if(vue=="Ground") googleMap.setRoadmap(googleMap.viewTerrain);
              else if(vue=="Road") googleMap.setRoadmap(googleMap.viewRoadmap);
              else  googleMap.setRoadmap(googleMap.viewSatellite);

             /**
             Afficher la ville de Strabourg
              */
             //googleMap.showLocation("strasbourg", "france", 390, 400);
             /**
              * Afficher Paris en fonction ses coordonnées GPS
              */
              googleMap.setZoom(zoom);
             googleMap.showCoordinate(lattitudeC, longitudeC, lattitudeP, longitudeP,640, 640);
             
         } catch (Exception ex) {
			
         }
}

    private void jButtonViewActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    	zoom = Integer.parseInt(jSpinnerZoom.getValue().toString());
    	vue = jComboBoxTypeVue.getSelectedItem().toString();
    	 try {
             googleMap.setApiKey("ABQIAAAAtnr4_GzvhB-Oe-xXkGYFNBR2RpSMnlPM-oEGXWGIpwU-iPv4ghSJlR7Ikip7Q7w8sTD3ceYOHyH8cw");
             
              if(vue=="Hybride") googleMap.setRoadmap(googleMap.viewHybrid);
              else if(vue=="Terrain") googleMap.setRoadmap(googleMap.viewTerrain);
              else if(vue=="Route") googleMap.setRoadmap(googleMap.viewRoadmap);
              else  googleMap.setRoadmap(googleMap.viewSatellite);

             /**
             Afficher la ville de Strabourg
              */
             //googleMap.showLocation("strasbourg", "france", 390, 400);
             /**
              * Afficher Paris en fonction ses coordonnées GPS
              */
              googleMap.setZoom(zoom);
             googleMap.showCoordinate(lattitudeC, longitudeC, lattitudeP, longitudeP,640, 640);
             
         } catch (Exception ex) {
			
         }
    }

    public static void enregistrerSous(JTable jTable1, String nom)
	{
		 HSSFWorkbook wb = new HSSFWorkbook();
			HSSFSheet sheet = wb.createSheet("Bordereau");
			int  a = jTable1.getRowCount();
			int b =jTable1.getColumnCount();
			for(int i=0;i<a;i++)
			{
			   HSSFRow row = sheet.createRow(i);
			   for(int j=0;j<b;j++)
			   {
				  HSSFCell cell = row.createCell((short)j);
				  cell.setCellValue((String) jTable1.getValueAt(i,j));

			   }
			}
			JFileChooser save=new JFileChooser();
			FileNameExtensionFilter filter = new FileNameExtensionFilter(
				   "Fichier Excel 2003", "xls");
				save.setFileFilter(filter);
			save.setSelectedFile(new File(nom));
			int retour=save.showSaveDialog(jTable1.getParent());

			FileOutputStream fileOut;
			try {
			  fileOut = new FileOutputStream(save.getSelectedFile().getPath());
			  wb.write(fileOut);
			  fileOut.close();
			  ouvrirProg(save.getSelectedFile().getPath());
			} catch (FileNotFoundException e) {
				e.printStackTrace();
			} catch (IOException e) {
				e.printStackTrace();
			}
	}
	
	public static void ouvrirProg(String chemin)
	 {
		 if (Desktop.isDesktopSupported()) {
				Desktop desktop = Desktop.getDesktop();
				if (desktop.isSupported(java.awt.Desktop.Action.OPEN)) {
					try {
						desktop.open(new File(chemin));
					} catch (IOException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
				}
			}
			else
			{
				String[] cmdArray = null;
				final String filePath = new File(chemin).getAbsolutePath();

				String osName = System.getProperty("os.name");
				if (osName.indexOf("Windows") >= 0) {
					// Sous Windows la commande diffère selon la version :
					if (osName.indexOf("Windows 9")>=0 || osName.indexOf("Windows Me")>=0) {
						// Sous les Windows 9x ou Me, on doit utiliser "command.com" :
						cmdArray = new String[] {"command.com", "/C", filePath};
					} else {
						// Sous Windows NT ou les Windows depuis 2000, on utilise cmd.exe :
						cmdArray = new String[] {"cmd.exe", "/C", filePath};
					}
				} else if (osName.indexOf("Mac OS") >= 0) {
					// Sous Max OS on utilise directement 'open'
					cmdArray = new String[] {"open", filePath};
				} else if (osName.indexOf("Linux") >= 0) {
					// Sous linux on utilise directement 'xdg-open'
					cmdArray = new String[] {"xdg-open", filePath};
				} else {
					try {
						throw new IOException("Unsupported Operating System : " + osName);
					} catch (IOException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
				}
				// On lance le process correspondant :
				try {
					Process process = Runtime.getRuntime().exec(cmdArray);
					// Et on ferme les flux d'E/S standard
					// (sinon cela peut provoquer des blocages)
					process.getInputStream().close();
					process.getOutputStream().close();
					process.getErrorStream().close();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
	 }
    
    public void jButtonExportActionPerformed(java.awt.event.ActionEvent evt)
    {
    	enregistrerSous(result, "result_project"+project+".xls");
    }
    
   

    /**
     * @param args the command line arguments
     */
 
    // Variables declaration - do not modify
    private javax.swing.JButton jButtonActualiserLocalisation;
    private javax.swing.JButton jButtonView;
    private javax.swing.JButton jButtonExport;
    private javax.swing.JComboBox jComboBoxTypeVue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelOperationsTrafic;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPaneLocalisation;
    private javax.swing.JScrollPane jScrollPaneTrafic;
    private javax.swing.JSpinner jSpinnerZoom;
    private javax.swing.JSplitPane jSplitPane1;
    private JGoogleMapEditorPan googleMap;
    private int zoom=0;
    private String vue="", lattitudeC="12.25", longitudeC="10.1", lattitudeP="10.45", longitudeP="10.45";
    double dist;
    String adresseC;
    JTable result =  new JTable();
    int project;
    
    // End of variables declaration
}
